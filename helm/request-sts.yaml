apiVersion: apps/v1
kind: StatefulSet      
metadata:
  name: "request-sts"
  namespace: kafkastreamingdata
  labels: 
    app: "request-sts"
    serviceSelector: "request-sts"
spec:
  selector: 
    matchLabels: 
      app: "request-sts"
  serviceName: "request-sts-svc"
  replicas: 1
  podManagementPolicy: Parallel
  minReadySeconds: 10
  template:
    metadata: 
      labels:
        app: "request-sts"
    spec: 
      containers:
        - name: "request-sts"
          image: sjafari2/simulator:latest
          env:
            - name: POD_ORDINAL
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: RqstPodMntPath
              valueFrom:
                configMapKeyRef:
                  name: pipeline-config
                  key: RqstPodMntPath
            - name: RqstPodSharedPath
              valueFrom:
                configMapKeyRef:
                  name: pipeline-config
                  key: RqstPodSharedPath
          command: ["/bin/bash", "-c"]
          args:
            - |
              rm ${RqstPodSharedPath}/*
              chmod +x runrequest.sh
              #./runrequest.sh 
              sleep infinity
          ports:
          - containerPort: 9092
            name: "request-port"
          - containerPort: 9093
            name: "exporter-port"       
          resources: 
            limits:
              memory: "50Gi"
              cpu: "4"
            requests:
              memory: "50Gi"
              cpu: "4"
          volumeMounts:
          - mountPath: app/request-simulator 
            name: request-simulator
          - mountPath: app/request-shared
            name: request-shared
          - name: config-volume
            mountPath: /etc/configs                 
      volumes:
        - name: request-simulator
          persistentVolumeClaim:
            claimName: request-simulator
        - name: request-shared
          persistentVolumeClaim:
            claimName: request-shared
        - name: config-volume
          configMap:
            name: pipeline-config
            #            items:
            #            - key: RqstPodMntPath
            #              path: RqstPodMntPath
            #            - key: RqstPodSharedPath
            #              path: RqstPodSharedPath
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - request-sts
                - merge-sts
                - cons-sts
                - prod-sts
                - kafka
                - kafka-zookeeper
            topologyKey: "kubernetes.io/hostname"

            #        terminationGracePeriodSeconds: 10
      #  securityContext:
      #    runAsUser: 1000
      #    runAsGroup: 3000
      #    fsGroup: 2000
      #    fsGroupChangePolicy: "Always"
      #    restartPolicy: OnFailure
#  volumeClaimTemplates:
#  - metadata:
#      name: "requestumer-app-data"
#      creationTimestamp: null
#      labels:
#        io.kompose.service: "requestumer-app-data"
#        #      name: kafka-claim-data
#    spec:
#      storageClassName: rook-cephfs-central
#      accessModes:
#        - ReadWriteMany
#      resources:
#        requests:
#          storage: 100Gi
#
